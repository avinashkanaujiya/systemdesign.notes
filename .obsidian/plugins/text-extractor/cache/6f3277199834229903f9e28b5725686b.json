{"path":".obsidian/plugins/text-extractor/cache/6f3277199834229903f9e28b5725686b.json","text":"19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 1 /34 S o r t in g A lg o r it h m s T y p e o f S o r t in g A lg o s C o m p a r is o n B a s e d A lg o s S e le c t io n S o r t 1   v o i d s e l e c t i o n S o r t ( i n t a r r [ ] , i n t n )   2   {   3       i n t i , j , m i n _ i d x ;   4     5       / / O n e b y o n e m o v e b o u n d a r y o f u n s o r t e d s u b a r r a y   6       f o r ( i = 0 ; i < n - 1 ; i + + )   7       {   8           / / F i n d t h e m i n i m u m e l e m e n t i n u n s o r t e d a r r a y   9           m i n _ i d x = i ;   1 0           f o r ( j = i + 1 ; j < n ; j + + )   1 1             i f ( a r r [ j ] < a r r [ m i n _ i d x ] )   1 2               m i n _ i d x = j ;   1 3     1 4           / / S w a p t h e f o u n d m i n i m u m e l e m e n t w i t h t h e f i r s t e l e m e n t   1 5           s w a p ( & a r r [ m i n _ i d x ] , & a r r [ i ] ) ;   1 6       }   1 7   }   T im e C o m p le x it y : O ( n 2 ) A u x ilia r y S p a c e : O (1 ) T h e g o o d t h in g a b o u t it is t h a t it n e v e r m a k e s m o r e t h a n O ( n ) s w a p s a n d c a n b e u s e f u l w h e n m e m o r y w r it e is c o s t ly o p e r a t io n . T h e d e fa u lt im p le m e n t a t io n is n o t s t a b le . B u t it c a n b e m a d e s t a b le . I t is I n - P la c e , s o it d o e s n o t r e q u ir e e x t r a s p a c e . S t a b le S e le c t io n S o r t S e le c t io n s o r t c a n b e m a d e S t a b le if in s t e a d o f s w a p p in g , t h e m in im u m e le m e n t is p la c e d in it s p o s it io n w it h o u t s w a p p in g i.e . b y p la c in g t h e n u m b e r in it s p o s it io n b y p u s h in g e v e r y e le m e n t o n e s t e p f o r w a r d . 1   v o i d s t a b l e S e l e c t i o n S o r t ( i n t a [ ] , i n t n )   2   {   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 2 /34 3       / / I t e r a t e t h r o u g h a r r a y e l e m e n t s   4       f o r ( i n t i = 0 ; i < n - 1 ; i + + )   5       {   6     7           / / L o o p i n v a r i a n t : E l e m e n t s t i l l a [ i - 1 ]   8           / / a r e a l r e a d y s o r t e d .   9     1 0           / / F i n d m i n i m u m e l e m e n t f r o m   1 1           / / a r r [ i ] t o a r r [ n - 1 ] .   1 2           i n t m i n = i ;   1 3           f o r ( i n t j = i + 1 ; j < n ; j + + )   1 4               i f ( a [ m i n ] > a [ j ] )   1 5                   m i n = j ;   1 6     1 7           / / M o v e m i n i m u m e l e m e n t a t c u r r e n t i .   1 8           i n t k e y = a [ m i n ] ;   1 9           w h i l e ( m i n > i )   2 0           {   2 1               a [ m i n ] = a [ m i n - 1 ] ;   2 2               m i n - - ;   2 3           }   2 4           a [ i ] = k e y ;   2 5       }   2 6   } B u b b le S o r t 1   v o i d b u b b l e S o r t ( i n t a r r [ ] , i n t n )   2   {   3     i n t i , j ;   4     f o r ( i = 0 ; i < n - 1 ; i + + )         5     6         / / L a s t i e l e m e n t s a r e a l r e a d y i n p l a c e     7         f o r ( j = 0 ; j < n - i - 1 ; j + + )   8             i f ( a r r [ j ] > a r r [ j + 1 ] )   9                 s w a p ( & a r r [ j ] , & a r r [ j + 1 ] ) ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 3 /34 1 0   }   T im e C o m p le x it y : O ( n 2 ) 1   v o i d b u b b l e S o r t ( i n t a r r [ ] , i n t n )   2   {   3     i n t i , j ;   4     b o o l s w a p p e d ;   5     f o r ( i = 0 ; i < n - 1 ; i + + )   6     {   7       s w a p p e d = f a l s e ;   8       f o r ( j = 0 ; j < n - i - 1 ; j + + )   9       {   1 0           i f ( a r r [ j ] > a r r [ j + 1 ] )   1 1           {   1 2             s w a p ( & a r r [ j ] , & a r r [ j + 1 ] ) ;   1 3             s w a p p e d = t r u e ;   1 4           }   1 5       }   1 6     1 7       / / I F n o t w o e l e m e n t s w e r e s w a p p e d b y i n n e r l o o p , t h e n b r e a k   1 8       i f ( s w a p p e d = = f a l s e )   1 9           b r e a k ;   2 0     }   2 1   }   W o r s t a n d A v e r a g e C a s e T im e C o m p le x it y : O ( n 2 ) B e s t C a s e T im e C o m p le x it y : O ( n ) A u x ilia r y S p a c e : O (1 ) I t is I n - P la c e a n d it is S t a b le . I n s e r t io n S o r t 1   v o i d i n s e r t i o n S o r t ( i n t a r r [ ] , i n t n )   2   {   3       i n t i , k e y , j ;   4       f o r ( i = 1 ; i < n ; i + + ) {   5           k e y = a r r [ i ] ;   6           j = i - 1 ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 4 /34 7     8           / * M o v e e l e m e n t s o f a r r [ 0 . . i - 1 ] , t h a t a r e   9             g r e a t e r t h a n k e y , t o o n e p o s i t i o n a h e a d   1 0             o f t h e i r c u r r e n t p o s i t i o n * / 1 1           w h i l e ( j > = 0 & & a r r [ j ] > k e y ) {   1 2               a r r [ j + 1 ] = a r r [ j ] ;   1 3               j = j - 1 ;   1 4           }   1 5           a r r [ j + 1 ] = k e y ;   1 6       }   1 7   }   T im e C o m p le x it y : O ( n * 2 )   A u x ilia r y S p a c e : O (1 ) B o u n d a r y C a s e s :  I n s e r t io n s o r t t a k e s m a x im u m t im e  t o s o r t if e le m e n t s a r e s o r t e d in r e v e r s e o r d e r. A n d it t a k e s m in im u m  t im e ( O r d e r o f n ) w h e n e le m e n t s a r e a lr e a d y s o r t e d . A lg o r it h m ic P a r a d ig m : I n c r e m e n t a l A p p r o a c h S o r t in g I n P la c e : Y e s S t a b le : Y e s O n lin e : Y e s U s e s :  I n s e r t io n s o r t is u s e d w h e n n u m b e r o f  e le m e n t s is s m a ll.  I t c a n a ls o b e u s e f u l w h e n in p u t a r r a y is a lm o s t  s o r t e d , o n ly f e w e le m e n t s a r e m is p la c e d in c o m p le t e b ig a r r a y. W h a t is B in a r y I n s e r t io n S o r t ? W e c a n u s e b in a r y s e a r c h t o r e d u c e t h e n u m b e r o f c o m p a r is o n s in n o r m a l in s e r t io n s o r t . B in a r y I n s e r t io n S o r t u s e s b in a r y s e a r c h t o f in d t h e p r o p e r lo c a t io n t o in s e r t t h e s e le c t e d it e m a t e a c h it e r a t io n . I n n o r m a l in s e r t io n , s o r t in g t a k e s O ( i) ( a t  it e r a t io n ) in w o r s t c a s e . W e c a n r e d u c e it t o O ( ) b y u s in g b in a r y s e a r c h . T h e a lg o r it h m , a s a w h o le , s t ill h a s a r u n n in g w o r s t c a s e r u n n in g t im e o f O ( ) b e c a u s e o f t h e s e r ie s o f s w a p s r e q u ir e d f o r e a c h in s e r t io n . M e r g e S o r t I t is a D iv id e & C o n q u e r A lg o r it h m . 1   v o i d m e r g e ( i n t a r r [ ] , i n t l , i n t m , i n t r )   2   {   3       i n t i , j , k ;   4       i n t n 1 = m - l + 1 ;   5       i n t n 2 =   r - m ;   6     19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 5 /34 7       / * c r e a t e t e m p a r r a y s * / 8       i n t L [ n 1 ] , R [ n 2 ] ;   9     1 0       / * C o p y d a t a t o t e m p a r r a y s L [ ] a n d R [ ] * / 1 1       f o r ( i = 0 ; i < n 1 ; i + + )   1 2           L [ i ] = a r r [ l + i ] ;   1 3       f o r ( j = 0 ; j < n 2 ; j + + )   1 4           R [ j ] = a r r [ m + 1 + j ] ;   1 5     1 6       / * M e r g e t h e t e m p a r r a y s b a c k i n t o a r r [ l . . r ] * / 1 7       i = 0 ; / / I n i t i a l i n d e x o f f i r s t s u b a r r a y   1 8       j = 0 ; / / I n i t i a l i n d e x o f s e c o n d s u b a r r a y   1 9       k = l ; / / I n i t i a l i n d e x o f m e r g e d s u b a r r a y   2 0       w h i l e ( i < n 1 & & j < n 2 )   2 1       {   2 2           i f ( L [ i ] < = R [ j ] )   2 3           {   2 4               a r r [ k ] = L [ i ] ;   2 5               i + + ;   2 6           }   2 7           e l s e 2 8           {   2 9               a r r [ k ] = R [ j ] ;   3 0               j + + ;   3 1           }   3 2           k + + ;   3 3       }   3 4     3 5       / * C o p y t h e r e m a i n i n g e l e m e n t s o f L [ ] , i f t h e r e   3 6         a r e a n y * / 3 7       w h i l e ( i < n 1 )   3 8       {   3 9           a r r [ k ] = L [ i ] ;   4 0           i + + ;   4 1           k + + ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 6 /34 4 2       }   4 3     4 4       / * C o p y t h e r e m a i n i n g e l e m e n t s o f R [ ] , i f t h e r e   4 5         a r e a n y * / 4 6       w h i l e ( j < n 2 )   4 7       {   4 8           a r r [ k ] = R [ j ] ;   4 9           j + + ;   5 0           k + + ;   5 1       }   5 2   }   5 3     5 4   / * l i s f o r l e f t i n d e x a n d r i s r i g h t i n d e x o f t h e   5 5     s u b - a r r a y o f a r r t o b e s o r t e d * / 5 6   v o i d m e r g e S o r t ( i n t a r r [ ] , i n t l , i n t r )   5 7   {   5 8       i f ( l < r )   5 9       {   6 0           / / S a m e a s ( l + r ) / 2 , b u t a v o i d s o v e r f l o w f o r   6 1           / / l a r g e l a n d h   6 2           i n t m = l + ( r - l ) / 2 ;   6 3     6 4           / / S o r t f i r s t a n d s e c o n d h a l v e s   6 5           m e r g e S o r t ( a r r , l , m ) ;   6 6           m e r g e S o r t ( a r r , m + 1 , r ) ;   6 7     6 8           m e r g e ( a r r , l , m , r ) ;   6 9       }   7 0   }   T im e C o m p le x it y : S o r t in g a r r a y s o n d if f e r e n t  m a c h in e s . M e r g e S o r t is a r e c u r s iv e a lg o r it h m a n d t im e c o m p le x it y c a n b e  e x p r e s s e d a s f o llo w in g r e c u r r e n c e r e la t io n .  T ( n ) = 2 T ( n / 2 ) + O ( n ) .  T h e a b o v e r e c u r r e n c e c a n b e s o lv e d e it h e r u s in g R e c u r r e n c e T r e e m e t h o d  o r M a s t e r m e t h o d .     I t fa lls in c a s e I I o f M a s t e r M e t h o d a n d s o lu t io n  o f t h e r e c u r r e n c e is O ( lo g n ) . 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 7 /34  T im e c o m p le x it y o f M e r g e S o r t is O ( n lo g n ) in a ll 3 c a s e s ( w o r s t , a v e r a g e a n d b e s t ) a s m e r g e s o r t a lw a y s d iv id e s  t h e a r r a y in t w o h a lv e s a n d t a k e lin e a r t im e t o m e r g e t w o h a lv e s . A u x ilia r y S p a c e : O ( n ) A lg o r it h m ic P a r a d ig m :  D iv id e a n d C o n q u e r S o r t in g I n P la c e : N o in a t y p ic a l im p le m e n t a t io n S t a b le : Y e s H e a p S o r t H e a p s o r t is a c o m p a r is o n b a s e d s o r t in g t e c h n iq u e b a s e d o n B in a r y H e a p d a t a s t r u c t u r e . I t is s im ila r t o s e le c t io n s o r t w h e r e w e f ir s t f in d t h e m a x im u m e le m e n t a n d p la c e t h e m a x im u m e le m e n t a t t h e e n d . W e r e p e a t t h e s a m e p r o c e s s f o r r e m a in in g e le m e n t . A r r a y b a s e d r e p r e s e n t a t io n is u s e d f o r b in a r y h e a p . P a r e n t n o d e is  a n d le f t c h ild n o d e is  r ig h t c h ild is  w h e r e  s t a r t s w it h  t ill . 1   v o i d h e a p i f y ( i n t a r r [ ] , i n t n , i n t i )   2   {   3       i n t l a r g e s t = i ; / / I n i t i a l i z e l a r g e s t a s r o o t   4       i n t l = 2 * i + 1 ; / / l e f t = 2 * i + 1   5       i n t r = 2 * i + 2 ; / / r i g h t = 2 * i + 2   6     7       / / I f l e f t c h i l d i s l a r g e r t h a n r o o t   8       i f ( l < n & & a r r [ l ] > a r r [ l a r g e s t ] )   9           l a r g e s t = l ;   1 0     1 1       / / I f r i g h t c h i l d i s l a r g e r t h a n l a r g e s t s o f a r   1 2       i f ( r < n & & a r r [ r ] > a r r [ l a r g e s t ] )   1 3           l a r g e s t = r ;   1 4     1 5       / / I f l a r g e s t i s n o t r o o t   1 6       i f ( l a r g e s t ! = i )   1 7       {   1 8           s w a p ( a r r [ i ] , a r r [ l a r g e s t ] ) ;   1 9     2 0           / / R e c u r s i v e l y h e a p i f y t h e a f f e c t e d s u b - t r e e   2 1           h e a p i f y ( a r r , n , l a r g e s t ) ;   2 2       }   2 3   }   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 8 /34 2 4     2 5   / / m a i n f u n c t i o n t o d o h e a p s o r t   2 6   v o i d h e a p S o r t ( i n t a r r [ ] , i n t n )   2 7   {   2 8       / / B u i l d h e a p ( r e a r r a n g e a r r a y )   2 9       f o r ( i n t i = n / 2 - 1 ; i > = 0 ; i - - )   3 0           h e a p i f y ( a r r , n , i ) ;   3 1     3 2       / / O n e b y o n e e x t r a c t a n e l e m e n t f r o m h e a p   3 3       f o r ( i n t i = n - 1 ; i > = 0 ; i - - )   3 4       {   3 5           / / M o v e c u r r e n t r o o t t o e n d   3 6           s w a p ( a r r [ 0 ] , a r r [ i ] ) ;   3 7     3 8           / / c a l l m a x h e a p i f y o n t h e r e d u c e d h e a p   3 9           h e a p i f y ( a r r , i , 0 ) ;   4 0       }   4 1   }   H e a p s o r t is a n in - p la c e a lg o r it h m .  I t s t y p ic a l im p le m e n t a t io n is n o t s t a b le , b u t c a n b e m a d e s t a b le ( S e e t h is ) T im e C o m p le x it y : T im e c o m p le x it y o f h e a p if y is  O ( L o g n ) .  T im e c o m p le x it y o f c r e a t e A n d B u ild H e a p ( ) is O ( n ) a n d o v e r a ll  t im e c o m p le x it y o f H e a p S o r t is O ( n L o g n ) . Q u ic k S o r t L ik e M e r g e S o r t , Q u ic k S o r t is a D iv id e a n d C o n q u e r a lg o r it h m . I t p ic k s a n e le m e n t a s p iv o t a n d p a r t it io n s t h e g iv e n a r r a y a r o u n d t h e p ic k e d p iv o t . T h e r e a r e m a n y d if f e r e n t v e r s io n s o f q u ic k S o r t t h a t p ic k p iv o t in d if f e r e n t w a y s . \u0000 . A lw a y s p ic k f ir s t e le m e n t a s p iv o t . \u0000 . A lw a y s p ic k la s t e le m e n t a s p iv o t ( im p le m e n t e d b e lo w ) \u0000 . P ic k a r a n d o m e le m e n t a s p iv o t . \u0000 . P ic k m e d ia n a s p iv o t . T h e k e y p r o c e s s in q u ic k S o r t is p a r t it io n ( ) . T a r g e t o f p a r t it io n s is , g iv e n a n a r r a y a n d a n e le m e n t x o f a r r a y a s p iv o t , p u t x a t it s c o r r e c t p o s it io n in s o r t e d a r r a y a n d p u t a ll s m a lle r e le m e n t s ( s m a lle r t h a n x ) b e f o r e x , a n d p u t a ll g r e a t e r e le m e n t s ( g r e a t e r t h a n x ) a f t e r x . A ll t h is s h o u ld b e d o n e in lin e a r t im e . 1 v o i d s w a p ( i n t * a , i n t * b )   2 {   3     i n t t = * a ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 9 /34 4     * a = * b ;   5     * b = t ;   6 }   7     8 / * T h i s f u n c t i o n t a k e s l a s t e l e m e n t a s p i v o t , p l a c e s   9     t h e p i v o t e l e m e n t a t i t s c o r r e c t p o s i t i o n i n s o r t e d   1 0     a r r a y , a n d p l a c e s a l l s m a l l e r ( s m a l l e r t h a n p i v o t )   1 1     t o l e f t o f p i v o t a n d a l l g r e a t e r e l e m e n t s t o r i g h t   1 2     o f p i v o t * / 1 3 i n t p a r t i t i o n ( i n t a r r [ ] , i n t l o w , i n t h i g h )   1 4 {   1 5     i n t p i v o t = a r r [ h i g h ] ;     / / p i v o t   1 6     i n t i = ( l o w - 1 ) ;   / / I n d e x o f s m a l l e r e l e m e n t   1 7     1 8     f o r ( i n t j = l o w ; j < = h i g h - 1 ; j + + )   1 9     {   2 0         / / I f c u r r e n t e l e m e n t i s s m a l l e r t h a n o r   2 1         / / e q u a l t o p i v o t   2 2         i f ( a r r [ j ] < = p i v o t )   2 3         {   2 4             i + + ;     / / i n c r e m e n t i n d e x o f s m a l l e r e l e m e n t   2 5             s w a p ( & a r r [ i ] , & a r r [ j ] ) ;   2 6         }   2 7     }   2 8     s w a p ( & a r r [ i + 1 ] , & a r r [ h i g h ] ) ;   2 9     r e t u r n ( i + 1 ) ;   3 0 }   3 1     3 2 / * T h e m a i n f u n c t i o n t h a t i m p l e m e n t s Q u i c k S o r t   3 3   a r r [ ] - - > A r r a y t o b e s o r t e d ,   3 4   l o w   - - > S t a r t i n g i n d e x ,   3 5   h i g h   - - > E n d i n g i n d e x * / 3 6 v o i d q u i c k S o r t ( i n t a r r [ ] , i n t l o w , i n t h i g h )   3 7 {   3 8     i f ( l o w < h i g h )   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 10 /34 3 9     {   4 0         / * p i i s p a r t i t i o n i n g i n d e x , a r r [ p ] i s n o w   4 1             a t r i g h t p l a c e * / 4 2         i n t p i = p a r t i t i o n ( a r r , l o w , h i g h ) ;   4 3     4 4         / / S e p a r a t e l y s o r t e l e m e n t s b e f o r e   4 5         / / p a r t i t i o n a n d a f t e r p a r t i t i o n   4 6         q u i c k S o r t ( a r r , l o w , p i - 1 ) ;   4 7         q u i c k S o r t ( a r r , p i + 1 , h i g h ) ;   4 8     }   4 9 }   C o u n t in g S o r t C o u n t in g s o r t is a s o r t in g t e c h n iq u e b a s e d o n k e y s b e t w e e n a s p e c if ic r a n g e . I t w o r k s b y c o u n t in g t h e n u m b e r o f o b je c t s h a v in g d is t in c t k e y v a lu e s ( k in d o f h a s h in g ) . T h e n d o in g s o m e a r it h m e t ic t o c a lc u la t e t h e p o s it io n o f e a c h o b je c t in t h e o u t p u t s e q u e n c e . 1   v o i d c o u n t S o r t ( c h a r a r r [ ] )   2   {   3       / / T h e o u t p u t c h a r a c t e r a r r a y   4       / / t h a t w i l l h a v e s o r t e d a r r   5       c h a r o u t p u t [ s t r l e n ( a r r ) ] ;   6     7       / / C r e a t e a c o u n t a r r a y t o s t o r e c o u n t o f i n i d i v i d u l   8       / / c h a r a c t e r s a n d i n i t i a l i z e c o u n t a r r a y a s 0   9       i n t c o u n t [ R A N G E + 1 ] , i ;   1 0       m e m s e t ( c o u n t , 0 , s i z e o f ( c o u n t ) ) ;   1 1     1 2       / / S t o r e c o u n t o f e a c h c h a r a c t e r   1 3       f o r ( i = 0 ; a r r [ i ] ; + + i )   1 4           + + c o u n t [ a r r [ i ] ] ;   1 5     1 6       / / C h a n g e c o u n t [ i ] s o t h a t c o u n t [ i ] n o w c o n t a i n s a c t u a l   1 7       / / p o s i t i o n o f t h i s c h a r a c t e r i n o u t p u t a r r a y   1 8       f o r ( i = 1 ; i < = R A N G E ; + + i )   1 9           c o u n t [ i ] + = c o u n t [ i - 1 ] ;   2 0     19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 11 /34 2 1       / / B u i l d t h e o u t p u t c h a r a c t e r a r r a y   2 2       f o r ( i = 0 ; a r r [ i ] ; + + i )   2 3       {   2 4           o u t p u t [ c o u n t [ a r r [ i ] ] - 1 ] = a r r [ i ] ;   2 5           - - c o u n t [ a r r [ i ] ] ;   2 6       }   2 7     2 8       / *   2 9       F o r S t a b l e a l g o r i t h m   3 0       f o r ( i = s i z e o f ( a r r ) - 1 ; i > = 0 ; - - i )   3 1       {   3 2           o u t p u t [ c o u n t [ a r r [ i ] ] - 1 ] = a r r [ i ] ;   3 3           - - c o u n t [ a r r [ i ] ] ;   3 4       }   3 5         3 6       F o r L o g i c : S e e i m p l e m e n t a t i o n   3 7       * / 3 8     3 9       / / C o p y t h e o u t p u t a r r a y t o a r r , s o t h a t a r r n o w   4 0       / / c o n t a i n s s o r t e d c h a r a c t e r s   4 1       f o r ( i = 0 ; a r r [ i ] ; + + i )   4 2           a r r [ i ] = o u t p u t [ i ] ;   4 3   } T im e C o m p le x it y : O ( n + k ) w h e r e n is t h e n u m b e r o f e le m e n t s in in p u t a r r a y a n d k is t h e r a n g e o f in p u t . A u x ilia r y S p a c e : O ( n + k ) T h e p r o b le m w it h t h e p r e v io u s c o u n t in g s o r t w a s t h a t w e c o u ld n o t  s o r t t h e e le m e n t s if w e h a v e n e g a t iv e n u m b e r s in it . B e c a u s e t h e r e a r e  n o n e g a t iv e a r r a y in d ic e s . S o w h a t w e d o is , w e f in d t h e m in im u m e le m e n t  a n d w e w ill s t o r e c o u n t o f t h a t m in im u m e le m e n t a t z e r o in d e x . 1   / / C o u n t i n g s o r t w h i c h t a k e s n e g a t i v e n u m b e r s a s w e l l   2   v o i d c o u n t S o r t ( v e c t o r < i n t > & a r r )   3   {   4       i n t m a x = * m a x _ e l e m e n t ( a r r . b e g i n ( ) , a r r . e n d ( ) ) ;   5       i n t m i n = * m i n _ e l e m e n t ( a r r . b e g i n ( ) , a r r . e n d ( ) ) ;   6       i n t r a n g e = m a x - m i n + 1 ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 12 /34 7         8       v e c t o r < i n t > c o u n t ( r a n g e ) , o u t p u t ( a r r . s i z e ( ) ) ;   9       f o r ( i n t i = 0 ; i < a r r . s i z e ( ) ; i + + )   1 0           c o u n t [ a r r [ i ] - m i n ] + + ;   1 1             1 2       f o r ( i n t i = 1 ; i < c o u n t . s i z e ( ) ; i + + )   1 3             c o u n t [ i ] + = c o u n t [ i - 1 ] ;   1 4       1 5       f o r ( i n t i = a r r . s i z e ( ) - 1 ; i > = 0 ; i - - )   1 6       {   1 7           o u t p u t [ c o u n t [ a r r [ i ] - m i n ] - 1 ] = a r r [ i ] ;   1 8                 c o u n t [ a r r [ i ] - m i n ] - - ;   1 9       }   2 0         2 1       f o r ( i n t i = 0 ; i < a r r . s i z e ( ) ; i + + )   2 2               a r r [ i ] = o u t p u t [ i ] ;   2 3   }   P o in t s t o b e n o t e d : \u0000 . C o u n t in g s o r t is e f f ic ie n t if t h e r a n g e o f in p u t   \u0000 . d a t a is n o t s ig n if ic a n t ly g r e a t e r t h a n t h e n u m b e r o f o b je c t s t o b e   \u0000 . s o r t e d .  C o n s id e r t h e s it u a t io n w h e r e t h e in p u t s e q u e n c e is b e t w e e n   \u0000 . r a n g e 1 t o 1 0 K a n d t h e d a t a is 1 0 , 5 , 1 0 K , 5 K . \u0000 . I t is n o t a c o m p a r is o n b a s e d s o r t in g . I t r u n n in g t im e c o m p le x it y is O ( n ) w it h s p a c e p r o p o r t io n a l t o t h e r a n g e o f d a t a . \u0000 . I t is o f t e n u s e d a s a s u b - r o u t in e t o a n o t h e r s o r t in g a lg o r it h m lik e r a d ix s o r t . \u0000 . C o u n t in g s o r t u s e s a p a r t ia l h a s h in g t o c o u n t t h e o c c u r r e n c e o f t h e d a t a o b je c t in O (1 ) . \u0000 . C o u n t in g s o r t c a n b e e x t e n d e d t o w o r k f o r n e g a t iv e in p u t s a ls o . R a d ix S o r t T h e lo w e r b o u n d f o r C o m p a r is o n b a s e d s o r t in g a lg o r it h m ( M e r g e S o r t , H e a p S o r t , Q u ic k - S o r t .. e t c ) is Ω ( n L o g n ) , i.e ., t h e y c a n n o t d o b e t t e r t h a n n L o g n .  C o u n t in g s o r t is a lin e a r t im e s o r t in g a lg o r it h m t h a t s o r t in O ( n + k ) t im e w h e n e le m e n t s a r e in r a n g e f r o m 1 t o k . W h a t if t h e e le m e n t s a r e in r a n g e f r o m 1 t o n ?   2 W e c a n ’t u s e c o u n t in g s o r t b e c a u s e c o u n t in g s o r t w ill t a k e O ( n 2 ) w h ic h is w o r s e t h a n c o m p a r is o n b a s e d s o r t in g a lg o r it h m s .  C a n w e s o r t s u c h a n a r r a y in lin e a r t im e ? R a d ix S o r t is t h e a n s w e r. T h e id e a o f R a d ix S o r t is t o d o d ig it b y d ig it s o r t s t a r t in g f r o m le a s t s ig n if ic a n t d ig it t o m o s t s ig n if ic a n t d ig it .  R a d ix s o r t u s e s c o u n t in g s o r t a s a 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 13 /34 s u b r o u t in e t o s o r t . W h a t is t h e r u n n in g t im e o f R a d ix S o r t ? L e t t h e r e b e d d ig it s in in p u t in t e g e r s . R a d ix S o r t t a k e s O ( d * ( n + b ) ) t im e w h e r e b is t h e b a s e f o r r e p r e s e n t in g n u m b e r s , f o r e x a m p le , f o r d e c im a l s y s t e m , b is 1 0 . W h a t is t h e v a lu e o f d ? I f k is t h e m a x im u m p o s s ib le v a lu e , t h e n d w o u ld b e O ( lo g b ( k ) ) . S o o v e r a ll t im e c o m p le x it y is O ( ( n + b ) * lo g b ( k ) ) . W h ic h lo o k s m o r e t h a n t h e t im e c o m p le x it y o f c o m p a r is o n b a s e d s o r t in g a lg o r it h m s f o r a la r g e k . L e t u s f ir s t lim it k . L e t k < = n c w h e r e c is a c o n s t a n t . I n t h a t c a s e , t h e c o m p le x it y b e c o m e s O ( n L o g b ( n ) ) . B u t it s t ill d o e s n ’t b e a t c o m p a r is o n b a s e d s o r t in g a lg o r it h m s . W h a t if w e m a k e v a lu e o f b la r g e r ? . W h a t s h o u ld b e t h e v a lu e o f b t o m a k e t h e t im e c o m p le x it y lin e a r ? I f w e s e t b a s n , w e g e t t h e t im e c o m p le x it y a s O ( n ) . I n o t h e r w o r d s , w e c a n s o r t a n a r r a y o f in t e g e r s w it h r a n g e f r o m 1 t o n c if t h e n u m b e r s a r e r e p r e s e n t e d in b a s e n ( o r e v e r y d ig it t a k e s lo g 2 ( n ) b it s ) .  1   v o i d c o u n t S o r t ( i n t a r r [ ] , i n t n , i n t e x p )   2   {   3       i n t o u t p u t [ n ] ; / / o u t p u t a r r a y   4       i n t i , c o u n t [ 1 0 ] = { 0 } ;   5     6       / / S t o r e c o u n t o f o c c u r r e n c e s i n c o u n t [ ]   7       f o r ( i = 0 ; i < n ; i + + )   8           c o u n t [ ( a r r [ i ] / e x p ) % 1 0 ] + + ;   9     1 0       / / C h a n g e c o u n t [ i ] s o t h a t c o u n t [ i ] n o w c o n t a i n s a c t u a l   1 1       / /   p o s i t i o n o f t h i s d i g i t i n o u t p u t [ ]   1 2       f o r ( i = 1 ; i < 1 0 ; i + + )   1 3           c o u n t [ i ] + = c o u n t [ i - 1 ] ;   1 4     1 5       / / B u i l d t h e o u t p u t a r r a y   1 6       f o r ( i = n - 1 ; i > = 0 ; i - - )   1 7       {   1 8           o u t p u t [ c o u n t [ ( a r r [ i ] / e x p ) % 1 0 ] - 1 ] = a r r [ i ] ;   1 9           c o u n t [ ( a r r [ i ] / e x p ) % 1 0 ] - - ;   2 0       }   2 1     2 2       / / C o p y t h e o u t p u t a r r a y t o a r r [ ] , s o t h a t a r r [ ] n o w   2 3       / / c o n t a i n s s o r t e d n u m b e r s a c c o r d i n g t o c u r r e n t d i g i t   2 4       f o r ( i = 0 ; i < n ; i + + )   2 5           a r r [ i ] = o u t p u t [ i ] ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 14 /34 2 6   }   2 7     2 8   / / T h e m a i n f u n c t i o n t o t h a t s o r t s a r r [ ] o f s i z e n u s i n g   2 9   / / R a d i x S o r t   3 0   v o i d r a d i x s o r t ( i n t a r r [ ] , i n t n )   3 1   {   3 2       / / F i n d t h e m a x i m u m n u m b e r t o k n o w n u m b e r o f d i g i t s   3 3       i n t m = g e t M a x ( a r r , n ) ;   3 4     3 5       / / D o c o u n t i n g s o r t f o r e v e r y d i g i t . N o t e t h a t i n s t e a d   3 6       / / o f p a s s i n g d i g i t n u m b e r , e x p i s p a s s e d . e x p i s 1 0 ^ i   3 7       / / w h e r e i i s c u r r e n t d i g i t n u m b e r   3 8       f o r ( i n t e x p = 1 ; m / e x p > 0 ; e x p * = 1 0 )   3 9           c o u n t S o r t ( a r r , n , e x p ) ;   4 0   }   C y c le S o r t C y c le s o r t is a n in - p la c e s o r t in g A lg o r it h m , u n s t a b le s o r t in g a lg o r it h m , a c o m p a r is o n s o r t t h a t is t h e o r e t ic a lly o p t im a l in t e r m s o f t h e t o t a l n u m b e r o f w r it e s t o t h e o r ig in a l a r r a y. I t is o p t im a l in t e r m s o f n u m b e r o f m e m o r y w r it e s . I t m in im iz e s t h e n u m b e r o f m e m o r y w r it e s t o s o r t ( E a c h v a lu e is e it h e r w r it t e n z e r o t im e s , if it ’s a lr e a d y in it s c o r r e c t p o s it io n , o r w r it t e n o n e t im e t o it s c o r r e c t p o s it io n .) I t is b a s e d o n t h e id e a t h a t a r r a y t o b e s o r t e d c a n b e d iv id e d in t o c y c le s . C y c le s c a n b e v is u a liz e d a s a g r a p h . W e h a v e n n o d e s a n d a n e d g e d ir e c t e d f r o m n o d e i t o n o d e j if t h e e le m e n t a t i- t h in d e x m u s t b e p r e s e n t a t j- t h in d e x in t h e s o r t e d a r r a y. W e o n e b y o n e c o n s id e r a ll c y c le s . W e f ir s t c o n s id e r t h e c y c le t h a t in c lu d e s f ir s t e le m e n t . W e f in d c o r r e c t p o s it io n o f f ir s t e le m e n t , p la c e it a t it s c o r r e c t p o s it io n , s a y j. W e c o n s id e r o ld v a lu e o f a r r [ j] a n d f in d it s c o r r e c t p o s it io n , w e k e e p d o in g t h is t ill a ll e le m e n t s o f c u r r e n t c y c le a r e p la c e d a t c o r r e c t p o s it io n , i.e ., w e d o n ’t c o m e b a c k t o c y c le s t a r t in g p o in t . 1 v o i d c y c l e S o r t ( i n t a r r [ ] , i n t n )   2 {   3     / / c o u n t n u m b e r o f m e m o r y w r i t e s   4     i n t w r i t e s = 0 ;   5     19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 15 /34 6     / / t r a v e r s e a r r a y e l e m e n t s a n d p u t i t t o o n   7     / / t h e r i g h t p l a c e   8     f o r ( i n t c y c l e _ s t a r t = 0 ; c y c l e _ s t a r t < = n - 2 ; c y c l e _ s t a r t + + ) {   9         / / i n i t i a l i z e i t e m a s s t a r t i n g p o i n t   1 0         i n t i t e m = a r r [ c y c l e _ s t a r t ] ;   1 1     1 2         / / F i n d p o s i t i o n w h e r e w e p u t t h e i t e m . W e b a s i c a l l y   1 3         / / c o u n t a l l s m a l l e r e l e m e n t s o n r i g h t s i d e o f i t e m .   1 4         i n t p o s = c y c l e _ s t a r t ;   1 5         f o r ( i n t i = c y c l e _ s t a r t + 1 ; i < n ; i + + )   1 6             i f ( a r r [ i ] < i t e m )   1 7                 p o s + + ;   1 8     1 9         / / I f i t e m i s a l r e a d y i n c o r r e c t p o s i t i o n   2 0         i f ( p o s = = c y c l e _ s t a r t )   2 1             c o n t i n u e ;   2 2     2 3         / / i g n o r e a l l d u p l i c a t e   e l e m e n t s   2 4         w h i l e ( i t e m = = a r r [ p o s ] )   2 5             p o s + = 1 ;   2 6     2 7         / / p u t t h e i t e m t o i t ' s r i g h t p o s i t i o n   2 8         i f ( p o s ! = c y c l e _ s t a r t ) {   2 9             s w a p ( i t e m , a r r [ p o s ] ) ;   3 0             w r i t e s + + ;   3 1         }   3 2     3 3         / / R o t a t e r e s t o f t h e c y c l e   3 4         w h i l e ( p o s ! = c y c l e _ s t a r t ) {   3 5             p o s = c y c l e _ s t a r t ;   3 6     3 7             / / F i n d p o s i t i o n w h e r e w e p u t t h e e l e m e n t   3 8             f o r ( i n t i = c y c l e _ s t a r t + 1 ; i < n ; i + + )   3 9                 i f ( a r r [ i ] < i t e m )   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 16 /34 4 0                     p o s + = 1 ;   4 1     4 2             / / i g n o r e a l l d u p l i c a t e   e l e m e n t s   4 3             w h i l e ( i t e m = = a r r [ p o s ] )   4 4                 p o s + = 1 ;   4 5     4 6             / / p u t t h e i t e m t o i t ' s r i g h t p o s i t i o n   4 7             i f ( i t e m ! = a r r [ p o s ] ) {   4 8                 s w a p ( i t e m , a r r [ p o s ] ) ;   4 9                 w r i t e s + + ;   5 0             }   5 1         }   5 2     }   5 3     5 4     / / N u m b e r o f m e m o r y w r i t e s o r s w a p s   5 5     / / c o u t < < w r i t e s < < e n d l ;   5 6 }   5 7 5 8 O u t p u t : 5 9 A f t e r s o r t :   6 0 1 2 3 4 8 9 1 0 1 0   T im e C o m p le x it y : O ( n 2 ) W o r s t C a s e : O ( n 2 ) A v e r a g e C a s e : O ( n 2 ) B e s t C a s e : O ( n 2 ) T h is s o r t in g a lg o r it h m is b e s t s u it e d f o r s it u a t io n s w h e r e m e m o r y w r it e o r s w a p o p e r a t io n s a r e c o s t ly. P ig e o n h o le S o r t P ig e o n h o le s o r t in g is a s o r t in g a lg o r it h m t h a t is s u it a b le f o r s o r t in g lis t s o f e le m e n t s w h e r e t h e n u m b e r o f e le m e n t s a n d t h e n u m b e r o f p o s s ib le k e y v a lu e s a r e a p p r o x im a t e ly t h e s a m e . I t r e q u ir e s O ( n + R a n g e ) t im e w h e r e n is n u m b e r o f e le m e n t s in in p u t a r r a y a n d ‘R a n g e ’ is n u m b e r o f p o s s ib le v a lu e s in a r r a y. W o r k in g o f A lg o r it h m : \u0000 . F in d m in im u m a n d m a x im u m v a lu e s in a r r a y. L e t t h e m in im u m a n d m a x im u m v a lu e s b e ‘m in ’ a n d ‘m a x ’ r e s p e c t iv e ly. A ls o f in d r a n g e a s ‘m a x - m in -1 ’. \u0000 . S e t u p a n a r r a y o f in it ia lly e m p t y “p ig e o n h o le s ” t h e s a m e s iz e a s o f t h e r a n g e . 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 17 /34 \u0000 . V is it e a c h e le m e n t o f t h e a r r a y a n d t h e n p u t e a c h e le m e n t in it s p ig e o n h o le . A n e le m e n t a r r [ i] is p u t in h o le a t in d e x a r r [ i] – m in . \u0000 . S t a r t t h e lo o p a ll o v e r t h e p ig e o n h o le a r r a y in o r d e r a n d p u t t h e e le m e n t s f r o m n o n - e m p t y h o le s b a c k in t o t h e o r ig in a l a r r a y. C o m p a r is o n w it h C o u n t in g S o r t :  I t is s im ila r t o c o u n t in g s o r t , b u t d if f e r s in t h a t it “m o v e s it e m s t w ic e : o n c e t o t h e b u c k e t a r r a y a n d a g a in t o t h e f in a l d e s t in a t io n “ . 1 / * S o r t s t h e a r r a y u s i n g p i g e o n h o l e a l g o r i t h m * / 2 v o i d p i g e o n h o l e S o r t ( i n t a r r [ ] , i n t n )   3 {   4     / / F i n d m i n i m u m a n d m a x i m u m v a l u e s i n a r r [ ]   5     i n t m i n = a r r [ 0 ] , m a x = a r r [ 0 ] ;   6     f o r ( i n t i = 1 ; i < n ; i + + )   7     {   8         i f ( a r r [ i ] < m i n )   9             m i n = a r r [ i ] ;   1 0         i f ( a r r [ i ] > m a x )   1 1             m a x = a r r [ i ] ;   1 2     }   1 3     i n t r a n g e = m a x - m i n + 1 ; / / F i n d r a n g e   1 4     1 5     / / C r e a t e a n a r r a y o f v e c t o r s . S i z e o f a r r a y   1 6     / / r a n g e . E a c h v e c t o r r e p r e s e n t s a h o l e t h a t   1 7     / / i s g o i n g t o c o n t a i n m a t c h i n g e l e m e n t s .   1 8     v e c t o r < i n t > h o l e s [ r a n g e ] ;   1 9     2 0     / / T r a v e r s e t h r o u g h i n p u t a r r a y a n d p u t e v e r y   2 1     / / e l e m e n t i n i t s r e s p e c t i v e h o l e   2 2     f o r ( i n t i = 0 ; i < n ; i + + )   2 3         h o l e s [ a r r [ i ] - m i n ] . p u s h _ b a c k ( a r r [ i ] ) ;   2 4     2 5     / / T r a v e r s e t h r o u g h a l l h o l e s o n e b y o n e . F o r   2 6     / / e v e r y h o l e , t a k e i t s e l e m e n t s a n d p u t i n   2 7     / / a r r a y .   2 8     i n t i n d e x = 0 ;   / / i n d e x i n s o r t e d a r r a y   2 9     f o r ( i n t i = 0 ; i < r a n g e ; i + + )   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 18 /34 3 0     {   3 1         v e c t o r < i n t > : : i t e r a t o r i t ;   3 2         f o r ( i t = h o l e s [ i ] . b e g i n ( ) ; i t ! = h o l e s [ i ] . e n d ( ) ; + + i t )   3 3             a r r [ i n d e x + + ]   = * i t ;   3 4     }   3 5 }   P ig e o n h o le s o r t h a s lim it e d u s e a s r e q u ir e m e n t s a r e r a r e ly m e t . F o r a r r a y s w h e r e r a n g e is m u c h la r g e r t h a n n , b u c k e t s o r t is a g e n e r a lis a t io n t h a t is m o r e e f f ic ie n t in s p a c e a n d t im e . C o m b S o r t C o m b S o r t is m a in ly a n im p r o v e m e n t o v e r B u b b le S o r t . B u b b le s o r t a lw a y s c o m p a r e s a d ja c e n t v a lu e s . S o a ll in v e r s io n s a r e r e m o v e d o n e b y o n e . C o m b S o r t im p r o v e s o n B u b b le S o r t b y u s in g g a p o f s iz e m o r e t h a n 1 . T h e g a p s t a r t s w it h a la r g e v a lu e a n d s h r in k s b y a fa c t o r o f 1 .3 in e v e r y it e r a t io n u n t il it r e a c h e s t h e v a lu e 1 . T h u s C o m b S o r t r e m o v e s m o r e t h a n o n e in v e r s io n c o u n t s w it h o n e s w a p a n d p e r f o r m s b e t t e r t h a n B u b b le S o r t . T h e s h r in k fa c t o r h a s b e e n e m p ir ic a lly f o u n d t o b e 1 .3 ( b y t e s t in g C o m b s o r t o n o v e r 2 0 0 ,0 0 0 r a n d o m lis t s ) [ S o u r c e : W ik i] A lt h o u g h , it w o r k s b e t t e r t h a n B u b b le S o r t o n a v e r a g e , w o r s t c a s e r e m a in s O ( n 2 ) . 1 / / T o f i n d g a p b e t w e e n e l e m e n t s   2 i n t g e t N e x t G a p ( i n t g a p )   3 {   4     / / S h r i n k g a p b y S h r i n k f a c t o r   5     g a p = ( g a p * 1 0 ) / 1 3 ;   6     7     i f ( g a p < 1 )   8         r e t u r n 1 ;   9     r e t u r n g a p ;   1 0 }   1 1     1 2 / / F u n c t i o n t o s o r t a [ 0 . . n - 1 ] u s i n g C o m b S o r t   1 3 v o i d c o m b S o r t ( i n t a [ ] , i n t n )   1 4 {   1 5     / / I n i t i a l i z e g a p   1 6     i n t g a p = n ;   1 7     1 8     / / I n i t i a l i z e s w a p p e d a s t r u e t o m a k e s u r e t h a t   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 19 /34 1 9     / / l o o p r u n s   2 0     b o o l s w a p p e d = t r u e ;   2 1     2 2     / / K e e p r u n n i n g w h i l e g a p i s m o r e t h a n 1 a n d l a s t   2 3     / / i t e r a t i o n c a u s e d a s w a p   2 4     w h i l e ( g a p ! = 1 | | s w a p p e d = = t r u e )   2 5     {   2 6         / / F i n d n e x t g a p   2 7         g a p = g e t N e x t G a p ( g a p ) ;   2 8     2 9         / / I n i t i a l i z e s w a p p e d a s f a l s e s o t h a t w e c a n   3 0         / / c h e c k i f s w a p h a p p e n e d o r n o t   3 1         s w a p p e d = f a l s e ;   3 2     3 3         / / C o m p a r e a l l e l e m e n t s w i t h c u r r e n t g a p   3 4         f o r ( i n t i = 0 ; i < n - g a p ; i + + )   3 5         {   3 6             i f ( a [ i ] > a [ i + g a p ] )   3 7             {   3 8                 s w a p ( a [ i ] , a [ i + g a p ] ) ;   3 9                 s w a p p e d = t r u e ;   4 0             }   4 1         }   4 2     }   4 3 }   T im e C o m p le x it y : W o r s t c a s e c o m p le x it y o f t h is a lg o r it h m is O ( n 2 ) a n d t h e B e s t C a s e c o m p le x it y is O ( n ) . A u x ilia r y S p a c e : O (1 ) . S h e ll S o r t S h e llS o r t is m a in ly a v a r ia t io n o f I n s e r t io n S o r t . I n in s e r t io n s o r t , w e m o v e e le m e n t s o n ly o n e p o s it io n a h e a d . W h e n a n e le m e n t h a s t o b e m o v e d fa r a h e a d , m a n y m o v e m e n t s a r e in v o lv e d . T h e id e a o f s h e llS o r t is t o a llo w e x c h a n g e o f fa r it e m s . I n s h e llS o r t , w e m a k e t h e a r r a y h - s o r t e d f o r a la r g e v a lu e o f h . W e k e e p r e d u c in g t h e v a lu e o f h u n t il it b e c o m e s 1 . A n a r r a y is s a id t o b e h - s o r t e d if a ll s u b lis t s o f e v e r y h ’t h e le m e n t is s o r t e d . 1 / * f u n c t i o n t o s o r t a r r u s i n g s h e l l S o r t * / 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 20 /34 2 i n t s h e l l S o r t ( i n t a r r [ ] , i n t n )   3 {   4     / / S t a r t w i t h a b i g g a p , t h e n r e d u c e t h e g a p   5     f o r ( i n t g a p = n / 2 ; g a p > 0 ; g a p / = 2 )   6     {   7         / / D o a g a p p e d i n s e r t i o n s o r t f o r t h i s g a p s i z e .   8         / / T h e f i r s t g a p e l e m e n t s a [ 0 . . g a p - 1 ] a r e a l r e a d y i n g a p p e d o r d e r   9         / / k e e p a d d i n g o n e m o r e e l e m e n t u n t i l t h e e n t i r e a r r a y i s   1 0         / / g a p s o r t e d   1 1         f o r ( i n t i = g a p ; i < n ; i + = 1 )   1 2         {   1 3             / / a d d a [ i ] t o t h e e l e m e n t s t h a t h a v e b e e n g a p s o r t e d   1 4             / / s a v e a [ i ] i n t e m p a n d m a k e a h o l e a t p o s i t i o n i   1 5             i n t t e m p = a r r [ i ] ;   1 6     1 7             / / s h i f t e a r l i e r g a p - s o r t e d e l e m e n t s u p u n t i l t h e c o r r e c t   1 8             / / l o c a t i o n f o r a [ i ] i s f o u n d   1 9             i n t j ;               2 0             f o r ( j = i ; j > = g a p & & a r r [ j - g a p ] > t e m p ; j - = g a p )   2 1                 a r r [ j ] = a r r [ j - g a p ] ;   2 2                 2 3             / /   p u t t e m p ( t h e o r i g i n a l a [ i ] ) i n i t s c o r r e c t l o c a t i o n   2 4             a r r [ j ] = t e m p ;   2 5         }   2 6     }   2 7     r e t u r n 0 ;   2 8 }   T im e C o m p le x it y : T im e c o m p le x it y o f a b o v e im p le m e n t a t io n o f s h e lls o r t is O ( n 2 ) . I n t h e a b o v e im p le m e n t a t io n g a p is r e d u c e b y h a lf in e v e r y it e r a t io n . T h e r e a r e m a n y o t h e r w a y s t o r e d u c e g a p w h ic h le a d t o b e t t e r t im e c o m p le x it y. S e e t h is f o r m o r e d e t a ils . B u c k e t S o r t 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 21 /34 B u c k e t s o r t is m a in ly u s e f u l w h e n in p u t is u n if o r m ly d is t r ib u t e d o v e r a r a n g e . F o r e x a m p le , c o n s id e r t h e f o llo w in g p r o b le m .  S o r t a la r g e s e t o f f lo a t in g p o in t n u m b e r s w h ic h a r e in r a n g e f r o m 0 .0 t o 1 .0 a n d a r e u n if o r m ly d is t r ib u t e d a c r o s s t h e r a n g e . H o w d o w e so r t t h e n u m b e r s e f f ic ie n t ly? A s im p le w a y is t o a p p ly a c o m p a r is o n b a s e d s o r t in g a lg o r it h m . T h e lo w e r b o u n d f o r C o m p a r is o n b a s e d s o r t in g a lg o r it h m ( M e r g e S o r t , H e a p S o r t , Q u ic k - S o r t .. e t c ) is Ω ( n L o g n ) , i.e ., t h e y c a n n o t d o b e t t e r t h a n n L o g n . C a n w e s o r t t h e a r r a y in lin e a r t im e ? C o u n t in g s o r t c a n n o t b e a p p lie d h e r e a s w e u s e k e y s a s in d e x in c o u n t in g s o r t . H e r e k e y s a r e f lo a t in g p o in t n u m b e r s .  T h e id e a is t o u s e b u c k e t s o r t . F o llo w in g is b u c k e t a lg o r it h m . 1 / / F u n c t i o n t o s o r t a r r [ ] o f s i z e n u s i n g b u c k e t s o r t   2 v o i d b u c k e t S o r t ( f l o a t a r r [ ] , i n t n )   3 {   4     / / 1 ) C r e a t e n e m p t y b u c k e t s   5     v e c t o r < f l o a t > b [ n ] ;   6       7     / / 2 ) P u t a r r a y e l e m e n t s i n d i f f e r e n t b u c k e t s   8     f o r ( i n t i = 0 ; i < n ; i + + )   9     {   1 0         i n t b i = n * a r r [ i ] ; / / I n d e x i n b u c k e t   1 1         b [ b i ] . p u s h _ b a c k ( a r r [ i ] ) ;   1 2     }   1 3     1 4     / / 3 ) S o r t i n d i v i d u a l b u c k e t s   1 5     f o r ( i n t i = 0 ; i < n ; i + + )   1 6         s o r t ( b [ i ] . b e g i n ( ) , b [ i ] . e n d ( ) ) ;   1 7     1 8     / / 4 ) C o n c a t e n a t e a l l b u c k e t s i n t o a r r [ ]   1 9     i n t i n d e x = 0 ;   2 0     f o r ( i n t i = 0 ; i < n ; i + + )   2 1         f o r ( i n t j = 0 ; j < b [ i ] . s i z e ( ) ; j + + )   2 2           a r r [ i n d e x + + ] = b [ i ] [ j ] ;   2 3 }   T im e C o m p le x it y : I f w e a s s u m e t h a t in s e r t io n in a b u c k e t t a k e s O (1 ) t im e t h e n s t e p s 1 a n d 2 o f t h e a b o v e a lg o r it h m c le a r ly t a k e O ( n ) t im e . T h e O (1 ) is e a s ily p o s s ib le if w e u s e a lin k e d lis t t o r e p r e s e n t a b u c k e t ( I n t h e f o llo w in g c o d e , C + + v e c t o r is u s e d f o r s im p lic it y ) . S t e p 4 a ls o t a k e s O ( n ) t im e a s t h e r e w ill b e n it e m s in a ll b u c k e t s . 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 22 /34 T h e m a in s t e p t o a n a ly z e is s t e p 3 . T h is s t e p a ls o t a k e s O ( n ) t im e o n a v e r a g e if a ll n u m b e r s a r e u n if o r m ly d is t r ib u t e d ( p le a s e r e f e r C L R S b o o k f o r m o r e d e t a ils ) I n t e r p o la t io n s e a r c h v s B in a r y s e a r c h I n t e r p o la t io n s e a r c h w o r k s b e t t e r t h a n B in a r y S e a r c h f o r a s o r t e d a n d u n if o r m ly d is t r ib u t e d a r r a y. O n a v e r a g e t h e in t e r p o la t io n s e a r c h m a k e s a b o u t lo g ( lo g ( n ) ) c o m p a r is o n s ( if t h e e le m e n t s a r e u n if o r m ly d is t r ib u t e d ) , w h e r e n is t h e n u m b e r o f e le m e n t s t o b e s e a r c h e d . I n t h e w o r s t c a s e (f o r in s t a n c e w h e r e t h e n u m e r ic a l v a lu e s o f t h e k e y s in c r e a s e e x p o n e n t ia lly ) it c a n m a k e u p t o O ( n ) c o m p a r is o n s . S t a b ilit y in S o r t in g A lg o r it h m s W h a t is it ? A s o r t in g a lg o r it h m is s a id t o b e s t a b le if t w o o b je c t s w it h e q u a l k e y s a p p e a r in t h e s a m e o r d e r in s o r t e d o u t p u t a s t h e y a p p e a r in t h e in p u t a r r a y t o b e s o r t e d . D o w e c a r e f o r s im p le a r r a y s lik e a r r a y o f in t e g e r s ? W h e n e q u a l e le m e n t s a r e in d is t in g u is h a b le , s u c h a s w it h in t e g e r s , o r m o r e g e n e r a lly, a n y d a t a w h e r e t h e e n t ir e e le m e n t is t h e k e y, s t a b ilit y is n o t a n is s u e . S t a b ilit y is a ls o n o t a n is s u e if a ll k e y s a r e d if f e r e n t . W h ic h s o r t in g a lg o r it h m s a r e s t a b le ? S o m e S o r t in g A lg o r it h m s a r e s t a b le b y n a t u r e , s u c h a s B u b b le S o r t , I n s e r t io n S o r t , M e r g e S o r t , C o u n t S o r t e t c . C o m p a r is o n b a s e d s t a b le s o r t s s u c h a s M e r g e S o r t a n d I n s e r t io n S o r t , m a in t a in s t a b ilit y b y e n s u r in g t h a t - E le m e n t A [ j] c o m e s b e f o r e A [ i] if a n d o n ly if A [ j] < A [ i] , h e r e h e r e i, j a r e in d ic e s a n d i < j. S in c e i < j,  t h e r e la t iv e o r d e r is p r e s e r v e d if A [ i] c o m e s b e f o r e A [ j] . O t h e r n o n - c o m p a r is o n b a s e d s o r t s s u c h a s C o u n t in g S o r t m a in t a in s t a b ilit y b y e n s u r in g t h a t t h e S o r t e d A r r a y is f ille d in a r e v e r s e o r d e r s o t h a t e le m e n t s w it h e q u iv a le n t k e y s h a v e t h e s a m e r e la t iv e p o s it io n . S o m e s o r t s s u c h a s R a d ix S o r t d e p e n d o n a n o t h e r s o r t , w it h t h e o n ly r e q u ir e m e n t t h a t t h e o t h e r s o r t s h o u ld b e s t a b le . W h ic h s o r t in g a lg o r it h m s a r e u n s t a b le ? Q u ic k S o r t , H e a p S o r t e t c ., c a n b e m a d e s t a b le b y a ls o t a k in g t h e p o s it io n o f t h e e le m e n t s in t o c o n s id e r a t io n . T h is c h a n g e m a y b e d o n e in a w a y w h ic h d o e s n o t c o m p r o m is e a lo t o n t h e p e r f o r m a n c e a n d t a k e s s o m e e x t r a s p a c e , p o s s ib ly θ ( n ) . C a n w e m a k e a n y s o r t in g a lg o r it h m s t a b le ? A n y g iv e n s o r t in g a lg o w h ic h is n o t s t a b le c a n b e m o d if ie d t o b e s t a b le . T h e r e c a n b e s o r t in g a lg o s p e c if ic w a y s t o m a k e it s t a b le , b u t in g e n e r a l, a n y c o m p a r is o n b a s e d s o r t in g a lg o r it h m w h ic h is n o t s t a b le b y n a t u r e c a n b e m o d if ie d t o b e s t a b le b y c h a n g in g t h e k e y c o m p a r is o n o p e r a t io n s o t h a t t h e c o m p a r is o n o f t w o k e y s c o n s id e r s p o s it io n a s a fa c t o r f o r o b je c t s w it h e q u a l k e y s . 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 23 /34 W h e n d o e s t h e w o r s t c a s e o f Q u ic k s o r t o c c u r ? T h e a n s w e r d e p e n d s o n s t r a t e g y f o r c h o o s in g p iv o t . I n e a r ly v e r s io n s o f Q u ic k S o r t w h e r e le f t m o s t ( o r r ig h t m o s t ) e le m e n t is c h o s e n a s p iv o t , t h e w o r s t o c c u r s in f o llo w in g c a s e s . 1 ) A r r a y is a lr e a d y s o r t e d in s a m e o r d e r. 2 ) A r r a y is a lr e a d y s o r t e d in r e v e r s e o r d e r. 3 ) A ll e le m e n t s a r e s a m e ( s p e c ia l c a s e o f c a s e 1 a n d 2 ) S in c e t h e s e c a s e s a r e v e r y c o m m o n u s e c a s e s , t h e p r o b le m w a s e a s ily s o lv e d b y c h o o s in g e it h e r a r a n d o m in d e x f o r t h e p iv o t , c h o o s in g t h e m id d le in d e x o f t h e p a r t it io n o r ( e s p e c ia lly f o r lo n g e r p a r t it io n s ) c h o o s in g t h e m e d ia n o f t h e f ir s t , m id d le a n d la s t e le m e n t o f t h e p a r t it io n f o r t h e p iv o t . W it h t h e s e m o d if ic a t io n s , t h e w o r s t c a s e o f Q u ic k s o r t h a s le s s c h a n c e s t o o c c u r, b u t w o r s t c a s e c a n s t ill o c c u r if t h e in p u t a r r a y is s u c h t h a t t h e m a x im u m ( o r m in im u m ) e le m e n t is a lw a y s c h o s e n a s p iv o t . L o w e r b o u n d f o r c o m p a r is o n b a s e d s o r t in g a lg o r it h m s T h e p r o b le m o f s o r t in g c a n b e v ie w e d a s f o llo w in g . I n p u t : A s e q u e n c e o f n n u m b e r s < a 1 , a 2 , . . . , a n > . O u t p u t : A p e r m u t a t io n ( r e o r d e r in g ) < a ‘1 , a ‘2 , . . . , a ‘n > o f t h e in p u t s e q u e n c e s u c h t h a t a ‘1 < = a ‘2 … .. < = a ‘n . A s o r t in g a lg o r it h m is c o m p a r is o n b a s e d if it u s e s c o m p a r is o n o p e r a t o r s t o f in d t h e o r d e r b e t w e e n t w o n u m b e r s .  C o m p a r is o n s o r t s c a n b e v ie w e d a b s t r a c t ly in t e r m s o f d e c is io n t r e e s . A d e c is io n t r e e is a f u ll b in a r y t r e e t h a t r e p r e s e n t s t h e c o m p a r is o n s b e t w e e n e le m e n t s t h a t a r e p e r f o r m e d b y a p a r t ic u la r s o r t in g a lg o r it h m o p e r a t in g o n a n in p u t o f a g iv e n s iz e . T h e e x e c u t io n o f t h e s o r t in g a lg o r it h m c o r r e s p o n d s t o t r a c in g a p a t h f r o m t h e r o o t o f t h e d e c is io n t r e e t o a le a f. A t e a c h in t e r n a l n o d e , a c o m p a r is o n a i < = a j is m a d e . T h e le f t s u b t r e e t h e n d ic t a t e s s u b s e q u e n t c o m p a r is o n s f o r a i < = a j, a n d t h e r ig h t s u b t r e e d ic t a t e s s u b s e q u e n t c o m p a r is o n s f o r a i > a j. W h e n w e c o m e t o a le a f, t h e s o r t in g a lg o r it h m h a s e s t a b lis h e d t h e o r d e r in g . S o w e c a n s a y f o llo w in g a b o u t t h e d e c is o n t r e e . 1 ) E a c h o f t h e n ! p e r m u t a t io n s o n n e le m e n t s m u s t a p p e a r a s o n e o f t h e le a v e s o f t h e d e c is io n t r e e f o r t h e s o r t in g a lg o r it h m t o s o r t p r o p e r ly. 2 ) L e t x b e t h e m a x im u m n u m b e r o f c o m p a r is o n s in a s o r t in g a lg o r it h m . T h e m a x im u m h e ig h t o f t h e d e c is o n t r e e w o u ld b e x . A t r e e w it h m a x im u m h e ig h t x h a s a t m o s t 2 ^ x le a v e s . A f t e r c o m b in in g t h e a b o v e t w o fa c t s , w e g e t f o llo w in g r e la t io n . 1     2       n !   < = 2 ^ x 3 4   T a k i n g L o g o n b o t h s i d e s . 5       l o g 2 ( n ! )   < = x 6 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 24 /34 7   S i n c e l o g 2 ( n ! )   = Θ ( n L o g n ) ,   w e c a n s a y 8       x = Ω ( n L o g 2 n ) T h e r e f o r e , a n y c o m p a r is o n b a s e d s o r t in g a lg o r it h m m u s t m a k e a t le a s t n L o g 2 n c o m p a r is o n s t o s o r t t h e in p u t a r r a y, a n d H e a p s o r t a n d m e r g e s o r t a r e a s y m p t o t ic a lly o p t im a l c o m p a r is o n s o r t s . W h ic h s o r t in g a lg o r it h m m a k e s m in im u m n u m b e r o f m e m o r y w r it e s ? M in im iz in g t h e n u m b e r o f w r it e s is u s e f u l w h e n m a k in g w r it e s t o s o m e h u g e d a t a s e t is v e r y e x p e n s iv e , s u c h a s w it h E E P R O M s o r F la s h m e m o r y , w h e r e e a c h w r it e r e d u c e s t h e lif e s p a n o f t h e m e m o r y. A m o n g t h e s o r t in g a lg o r it h m s t h a t w e g e n e r a lly s t u d y in o u r d a t a s t r u c t u r e a n d a lg o r it h m c o u r s e s ,  S e le c t io n S o r t m a k e s le a s t n u m b e r o f w r it e s ( it m a k e s O ( n ) s w a p s ) .  B u t , C y c le S o r t a lm o s t a lw a y s m a k e s le s s n u m b e r o f w r it e s c o m p a r e d t o S e le c t io n S o r t .  I n C y c le S o r t , e a c h v a lu e is e it h e r w r it t e n z e r o t im e s , if it ’s a lr e a d y in it s c o r r e c t p o s it io n , o r w r it t e n o n e t im e t o it s c o r r e c t p o s it io n . T h is m a t c h e s t h e m in im a l n u m b e r o f o v e r w r it e s r e q u ir e d f o r a c o m p le t e d in - p la c e s o r t . F in d t h e M in im u m le n g t h U n s o r t e d S u b a r r a y, s o r t in g w h ic h m a k e s t h e c o m p le t e a r r a y s o r t e d G iv e n a n u n s o r t e d a r r a y a r r [ 0 ..n -1 ] o f s iz e n , f in d t h e m in im u m le n g t h s u b a r r a y a r r [ s ..e ] s u c h t h a t s o r t in g t h is s u b a r r a y m a k e s t h e w h o le a r r a y s o r t e d . S o lu t io n : 1 ) F in d t h e c a n d id a t e u n s o r t e d s u b a r r a y   a ) S c a n f r o m le f t t o r ig h t a n d f in d t h e f ir s t e le m e n t w h ic h is g r e a t e r t h a n t h e n e x t e le m e n t . L e t s b e t h e in d e x o f s u c h a n e le m e n t . I n t h e a b o v e e x a m p le 1 , s is 3 ( in d e x o f 3 0 ) . b ) S c a n f r o m r ig h t t o le f t a n d f in d t h e f ir s t e le m e n t (f ir s t in r ig h t t o le f t o r d e r ) w h ic h is s m a lle r t h a n t h e n e x t e le m e n t ( n e x t in r ig h t t o le f t o r d e r ) . L e t e b e t h e in d e x o f s u c h a n e le m e n t . I n t h e a b o v e e x a m p le 1 , e is 7 ( in d e x o f 3 1 ) . 2 ) C h e c k w h e t h e r s o r t in g t h e c a n d id a t e u n s o r t e d s u b a r r a y m a k e s t h e c o m p le t e a r r a y s o r t e d o r n o t . I f n o t , t h e n in c lu d e m o r e e le m e n t s in t h e s u b a r r a y. a ) F in d t h e m in im u m a n d m a x im u m v a lu e s in a r r [s ..e ] . L e t m in im u m a n d m a x im u m v a lu e s b e m in a n d m a x . m in a n d m a x f o r [ 3 0 , 2 5 , 4 0 , 3 2 , 3 1 ] a r e 2 5 a n d 4 0 r e s p e c t iv e ly. b ) F in d t h e f ir s t e le m e n t ( if t h e r e is a n y ) in a r r [0 ..s -1 ] w h ic h is g r e a t e r t h a n m in , c h a n g e s t o in d e x o f t h is e le m e n t . T h e r e is n o s u c h e le m e n t in a b o v e e x a m p le 1 . c ) F in d t h e la s t e le m e n t ( if t h e r e is a n y ) in a r r [ e + 1 ..n -1 ] w h ic h is s m a lle r t h a n m a x , c h a n g e e t o in d e x o f t h is e le m e n t . I n t h e a b o v e e x a m p le 1 , e is c h a n g e d t o 8 ( in d e x o f 3 5 ) 3 ) P r in t s a n d e . 1 v o i d p r i n t U n s o r t e d ( i n t a r r [ ] , i n t n )   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 25 /34 2 {   3     i n t s = 0 , e = n - 1 , i , m a x , m i n ;   4         5     / / s t e p 1 ( a ) o f a b o v e a l g o   6     f o r ( s = 0 ; s < n - 1 ; s + + )   7     {   8         i f ( a r r [ s ] > a r r [ s + 1 ] )   9         b r e a k ;   1 0     }   1 1     i f ( s = = n - 1 )   1 2     {   1 3         c o u t < < \" T h e c o m p l e t e a r r a y i s s o r t e d \" ;   1 4         r e t u r n ;   1 5     }   1 6         1 7     / / s t e p 1 ( b ) o f a b o v e a l g o   1 8     f o r ( e = n - 1 ; e > 0 ; e - - )   1 9     {   2 0         i f ( a r r [ e ] < a r r [ e - 1 ] )   2 1         b r e a k ;   2 2     }   2 3         2 4     / / s t e p 2 ( a ) o f a b o v e a l g o   2 5     m a x = a r r [ s ] ; m i n = a r r [ s ] ;   2 6     f o r ( i = s + 1 ; i < = e ; i + + )   2 7     {   2 8         i f ( a r r [ i ] > m a x )   2 9         m a x = a r r [ i ] ;   3 0         i f ( a r r [ i ] < m i n )   3 1         m i n = a r r [ i ] ;   3 2     }   3 3         3 4     / / s t e p 2 ( b ) o f a b o v e a l g o   3 5     f o r ( i = 0 ; i < s ; i + + )   3 6     {   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 26 /34 3 7         i f ( a r r [ i ] > m i n )   3 8         {   3 9         s = i ;   4 0         b r e a k ;   4 1         }       4 2     }   4 3         4 4     / / s t e p 2 ( c ) o f a b o v e a l g o   4 5     f o r ( i = n - 1 ; i > = e + 1 ; i - - )   4 6     {   4 7         i f ( a r r [ i ] < m a x )   4 8         {   4 9         e = i ;   5 0         b r e a k ;   5 1         }   5 2     }   5 3             5 4     / / s t e p 3 o f a b o v e a l g o   5 5 c o u t < < \" T h e u n s o r t e d s u b a r r a y w h i c h \"   5 6       < < \" m a k e s t h e g i v e n a r r a y \" < < e n d l   5 7       < < \" s o r t e d l i e s b e t w e e n t h e i n d e e s \"   5 8       < < s < < \" a n d \" < < e ;   5 9 r e t u r n ;   6 0 }   T im e C o m p le x it y : O ( n ) M e r g e S o r t f o r L in k e d L is t s M e r g e s o r t is o f t e n p r e f e r r e d f o r s o r t in g a lin k e d lis t . T h e s lo w r a n d o m - a c c e s s p e r f o r m a n c e o f a lin k e d lis t m a k e s s o m e o t h e r a lg o r it h m s ( s u c h a s q u ic k s o r t ) p e r f o r m p o o r ly, a n d o t h e r s ( s u c h a s h e a p s o r t ) c o m p le t e ly im p o s s ib le . L e t h e a d b e t h e f ir s t n o d e o f t h e lin k e d lis t t o b e s o r t e d a n d h e a d R e f b e t h e p o in t e r t o h e a d . N o t e t h a t w e n e e d a r e f e r e n c e t o h e a d in M e r g e S o r t ( ) a s t h e b e lo w im p le m e n t a t io n c h a n g e s n e x t lin k s t o s o r t t h e lin k e d lis t s ( n o t d a t a a t t h e n o d e s ) , s o h e a d n o d e h a s t o b e c h a n g e d if t h e d a t a a t t h e o r ig in a l h e a d is n o t t h e s m a lle s t v a lu e in t h e lin k e d lis t . 1 M e r g e S o r t ( h e a d R e f ) 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 27 /34 2 1 ) I f t h e h e a d i s N U L L o r t h e r e i s o n l y o n e e l e m e n t i n t h e L i n k e d L i s t   3     t h e n r e t u r n . 4 2 ) E l s e d i v i d e t h e l i n k e d l i s t i n t o t w o h a l v e s .   5       F r o n t B a c k S p l i t ( h e a d , & a , & b ) ; / * a a n d b a r e t w o h a l v e s * / 6 3 ) S o r t t h e t w o h a l v e s a a n d b . 7       M e r g e S o r t ( a ) ; 8       M e r g e S o r t ( b ) ; 9 4 ) M e r g e t h e s o r t e d a a n d b ( u s i n g S o r t e d M e r g e ( ) d i s c u s s e d h e r e )   1 0     a n d u p d a t e t h e h e a d p o i n t e r u s i n g h e a d R e f . 1 1       * h e a d R e f = S o r t e d M e r g e ( a , b ) ; C o d e : 1 / * L i n k l i s t n o d e * / 2 c l a s s N o d e {   3 p u b l i c :   4     i n t d a t a ;   5     N o d e * n e x t ;   6 } ;   7     8 / * f u n c t i o n p r o t o t y p e s * / 9 N o d e * S o r t e d M e r g e ( N o d e * a , N o d e * b ) ;   1 0 v o i d F r o n t B a c k S p l i t ( N o d e * s o u r c e ,   1 1                     N o d e * * f r o n t R e f , N o d e * * b a c k R e f ) ;   1 2     1 3 / * s o r t s t h e l i n k e d l i s t b y c h a n g i n g n e x t p o i n t e r s ( n o t d a t a ) * / 1 4 v o i d M e r g e S o r t ( N o d e * * h e a d R e f )   1 5 {   1 6     N o d e * h e a d = * h e a d R e f ;   1 7     N o d e * a ;   1 8     N o d e * b ;   1 9     2 0     / * B a s e c a s e - - l e n g t h 0 o r 1 * / 2 1     i f ( ( h e a d = = N U L L ) | | ( h e a d - > n e x t = = N U L L ) ) {   2 2         r e t u r n ;   2 3     }   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 28 /34 2 4     2 5     / * S p l i t h e a d i n t o ' a ' a n d ' b ' s u b l i s t s * / 2 6     F r o n t B a c k S p l i t ( h e a d , & a , & b ) ;   2 7     2 8     / * R e c u r s i v e l y s o r t t h e s u b l i s t s * / 2 9     M e r g e S o r t ( & a ) ;   3 0     M e r g e S o r t ( & b ) ;   3 1     3 2     / * a n s w e r = m e r g e t h e t w o s o r t e d l i s t s t o g e t h e r * / 3 3     * h e a d R e f = S o r t e d M e r g e ( a , b ) ;   3 4 }   3 5     3 6 / * S e e h t t p s : / / w w w . g e e k s f o r g e e k s . o r g / ? p = 3 6 2 2 f o r d e t a i l s o f t h i s   3 7 f u n c t i o n * / 3 8 N o d e * S o r t e d M e r g e ( N o d e * a , N o d e * b )   3 9 {   4 0     N o d e * r e s u l t = N U L L ;   4 1     4 2     / * B a s e c a s e s * / 4 3     i f ( a = = N U L L )   4 4         r e t u r n ( b ) ;   4 5     e l s e i f ( b = = N U L L )   4 6         r e t u r n ( a ) ;   4 7     4 8     / * P i c k e i t h e r a o r b , a n d r e c u r * / 4 9     i f ( a - > d a t a < = b - > d a t a ) {   5 0         r e s u l t = a ;   5 1         r e s u l t - > n e x t = S o r t e d M e r g e ( a - > n e x t , b ) ;   5 2     }   5 3     e l s e {   5 4         r e s u l t = b ;   5 5         r e s u l t - > n e x t = S o r t e d M e r g e ( a , b - > n e x t ) ;   5 6     }   5 7     r e t u r n ( r e s u l t ) ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 29 /34 5 8 }   5 9     6 0 / * U T I L I T Y F U N C T I O N S * / 6 1 / * S p l i t t h e n o d e s o f t h e g i v e n l i s t i n t o f r o n t a n d b a c k h a l v e s ,   6 2     a n d r e t u r n t h e t w o l i s t s u s i n g t h e r e f e r e n c e p a r a m e t e r s .   6 3     I f t h e l e n g t h i s o d d , t h e e x t r a n o d e s h o u l d g o i n t h e f r o n t l i s t .   6 4     U s e s t h e f a s t / s l o w p o i n t e r s t r a t e g y . * / 6 5 v o i d F r o n t B a c k S p l i t ( N o d e * s o u r c e ,   6 6                     N o d e * * f r o n t R e f , N o d e * * b a c k R e f )   6 7 {   6 8     N o d e * f a s t ;   6 9     N o d e * s l o w ;   7 0     s l o w = s o u r c e ;   7 1     f a s t = s o u r c e - > n e x t ;   7 2     7 3     / * A d v a n c e ' f a s t ' t w o n o d e s , a n d a d v a n c e ' s l o w ' o n e n o d e * / 7 4     w h i l e ( f a s t ! = N U L L ) {   7 5         f a s t = f a s t - > n e x t ;   7 6         i f ( f a s t ! = N U L L ) {   7 7             s l o w = s l o w - > n e x t ;   7 8             f a s t = f a s t - > n e x t ;   7 9         }   8 0     }   8 1     8 2     / * ' s l o w ' i s b e f o r e t h e m i d p o i n t i n t h e l i s t , s o s p l i t i t i n t w o   8 3     a t t h a t p o i n t . * / 8 4     * f r o n t R e f = s o u r c e ;   8 5     * b a c k R e f = s l o w - > n e x t ;   8 6     s l o w - > n e x t = N U L L ;   8 7 }   8 8     8 9 / * F u n c t i o n t o p r i n t n o d e s i n a g i v e n l i n k e d l i s t * / 9 0 v o i d p r i n t L i s t ( N o d e * n o d e )   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 30 /34 9 1 {   9 2     w h i l e ( n o d e ! = N U L L ) {   9 3         c o u t < < n o d e - > d a t a < < \" \" ;   9 4         n o d e = n o d e - > n e x t ;   9 5     }   9 6 }   9 7     9 8 / * F u n c t i o n t o i n s e r t a n o d e a t t h e b e g i n g i n g o f t h e l i n k e d l i s t * / 9 9 v o i d p u s h ( N o d e * * h e a d _ r e f , i n t n e w _ d a t a )   1 0 0 {   1 0 1     / * a l l o c a t e n o d e * / 1 0 2     N o d e * n e w _ n o d e = n e w N o d e ( ) ;   1 0 3     1 0 4     / * p u t i n t h e d a t a * / 1 0 5     n e w _ n o d e - > d a t a = n e w _ d a t a ;   1 0 6     1 0 7     / * l i n k t h e o l d l i s t o f f t h e n e w n o d e * / 1 0 8     n e w _ n o d e - > n e x t = ( * h e a d _ r e f ) ;   1 0 9     1 1 0     / * m o v e t h e h e a d t o p o i n t t o t h e n e w n o d e * / 1 1 1     ( * h e a d _ r e f ) = n e w _ n o d e ;   1 1 2 }   1 1 3     1 1 4 / * D r i e r p r o g r a m t o t e s t a b o v e f u n c t i o n s * / 1 1 5 i n t m a i n ( )   1 1 6 {   1 1 7     / * S t a r t w i t h t h e e m p t y l i s t * / 1 1 8     N o d e * r e s = N U L L ;   1 1 9     N o d e * a = N U L L ;   1 2 0     1 2 1     / * L e t u s c r e a t e a u n s o r t e d l i n k e d l i s t s t o t e s t t h e f u n c t i o n s   1 2 2 C r e a t e d l i s t s s h a l l b e a : 2 - > 3 - > 2 0 - > 5 - > 1 0 - > 1 5 * / 1 2 3     p u s h ( & a , 1 5 ) ;   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 31 /34 1 2 4     p u s h ( & a , 1 0 ) ;   1 2 5     p u s h ( & a , 5 ) ;   1 2 6     p u s h ( & a , 2 0 ) ;   1 2 7     p u s h ( & a , 3 ) ;   1 2 8     p u s h ( & a , 2 ) ;   1 2 9     1 3 0     / * S o r t t h e a b o v e c r e a t e d L i n k e d L i s t * / 1 3 1     M e r g e S o r t ( & a ) ;   1 3 2     1 3 3     c o u t < < \" S o r t e d L i n k e d L i s t i s : \\ n \" ;   1 3 4     p r i n t L i s t ( a ) ;   1 3 5     1 3 6     r e t u r n 0 ;   1 3 7 }   T im e C o m p le x it y : O ( n L o g n ) S o r t a n e a r ly s o r t e d ( o r K s o r t e d ) a r r a y G iv e n a n a r r a y o f n e le m e n t s , w h e r e e a c h e le m e n t is a t m o s t k a w a y f r o m it s t a r g e t p o s it io n , d e v is e a n a lg o r it h m t h a t s o r t s in O ( n lo g k ) t im e . F o r e x a m p le , le t u s c o n s id e r k is 2 , a n e le m e n t a t in d e x 7 in t h e s o r t e d a r r a y, c a n b e a t in d e x e s 5 , 6 , 7 , 8 , 9 in t h e g iv e n a r r a y. W e c a n u s e I n s e r t io n S o r t t o s o r t t h e e le m e n t s e f f ic ie n t ly. F o llo w in g is t h e C c o d e f o r s t a n d a r d I n s e r t io n S o r t . 1 / * F u n c t i o n t o s o r t a n a r r a y u s i n g i n s e r t i o n s o r t * / 2 v o i d i n s e r t i o n S o r t ( i n t A [ ] , i n t s i z e )   3 {   4     i n t i , k e y , j ;   5     f o r ( i = 1 ; i < s i z e ; i + + )   6     {   7         k e y = A [ i ] ;   8         j = i - 1 ;   9     1 0         / * M o v e e l e m e n t s o f A [ 0 . . i - 1 ] , t h a t a r e g r e a t e r t h a n k e y , t o o n e   1 1           p o s i t i o n a h e a d o f t h e i r c u r r e n t p o s i t i o n .   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 32 /34 1 2           T h i s l o o p w i l l r u n a t m o s t k t i m e s * / 1 3         w h i l e ( j > = 0 & & A [ j ] > k e y )   1 4         {   1 5             A [ j + 1 ] = A [ j ] ;   1 6             j = j - 1 ;   1 7         }   1 8         A [ j + 1 ] = k e y ;   1 9     }   2 0 }   T h e in n e r lo o p w ill r u n a t m o s t k t im e s . T o m o v e e v e r y e le m e n t t o it s c o r r e c t p la c e , a t m o s t k e le m e n t s n e e d t o b e m o v e d . S o o v e r a ll c o m p le x it y w ill b e O ( n k ) W e c a n s o r t s u c h a r r a y s m o r e e f f ic ie n t ly w it h t h e h e lp o f H e a p d a t a s t r u c t u r e . F o llo w in g is t h e d e t a ile d p r o c e s s t h a t u s e s H e a p . 1 ) C r e a t e a M in H e a p o f s iz e k + 1 w it h f ir s t k + 1 e le m e n t s . T h is w ill t a k e O ( k ) t im e ( S e e t h is G F a c t ) 2 ) O n e b y o n e r e m o v e m in e le m e n t f r o m h e a p , p u t it in r e s u lt a r r a y, a n d a d d a n e w e le m e n t t o h e a p f r o m r e m a in in g e le m e n t s . R e m o v in g a n e le m e n t a n d a d d in g a n e w e le m e n t t o m in h e a p w ill t a k e L o g k t im e . S o o v e r a ll c o m p le x it y w ill b e O ( k ) + O ( ( n - k ) * lo g K ) 1 / / A S T L b a s e d C + + p r o g r a m t o s o r t a n e a r l y s o r t e d a r r a y .   2 # i n c l u d e < b i t s / s t d c + + . h >   3 u s i n g n a m e s p a c e s t d ;   4     5 / / G i v e n a n a r r a y o f s i z e n , w h e r e e v e r y e l e m e n t   6 / / i s k a w a y f r o m i t s t a r g e t p o s i t i o n , s o r t s t h e   7 / / a r r a y i n O ( n L o g k ) t i m e .   8 i n t s o r t K ( i n t a r r [ ] , i n t n , i n t k )   9 {   1 0     / / I n s e r t f i r s t k + 1 i t e m s i n a p r i o r i t y q u e u e ( o r m i n h e a p )   1 1     / / ( A O ( k ) o p e r a t i o n ) . W e a s s u m e , k < n .   1 2     p r i o r i t y _ q u e u e < i n t , v e c t o r < i n t > , g r e a t e r < i n t > > p q ( a r r , a r r + k + 1 ) ;   1 3     1 4     / / i i s i n d e x f o r r e m a i n i n g e l e m e n t s i n a r r [ ] a n d i n d e x   1 5     / / i s t a r g e t i n d e x o f f o r c u r r e n t m i n i m u m e l e m e n t i n   1 6     / / M i n H e a p m ' h p ' .   19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 33 /34 1 7     i n t i n d e x = 0 ;   1 8     f o r ( i n t i = k + 1 ; i < n ; i + + ) {   1 9         a r r [ i n d e x + + ] = p q . t o p ( ) ;   2 0         p q . p o p ( ) ;   2 1         p q . p u s h ( a r r [ i ] ) ;   2 2     }   2 3     2 4     w h i l e ( p q . e m p t y ( ) = = f a l s e ) {   2 5         a r r [ i n d e x + + ] = p q . t o p ( ) ;   2 6         p q . p o p ( ) ;   2 7     }   2 8 }   2 9     3 0 / / A u t i l i t y f u n c t i o n t o p r i n t a r r a y e l e m e n t s   3 1 v o i d p r i n t A r r a y ( i n t a r r [ ] , i n t s i z e )   3 2 {   3 3     f o r ( i n t i = 0 ; i < s i z e ; i + + )   3 4         c o u t < < a r r [ i ] < < \" \" ;   3 5     c o u t < < e n d l ;   3 6 }   3 7     3 8 / / D r i v e r p r o g r a m t o t e s t a b o v e f u n c t i o n s   3 9 i n t m a i n ( )   4 0 {   4 1     i n t k = 3 ;   4 2     i n t a r r [ ] = { 2 , 6 , 3 , 1 2 , 5 6 , 8 } ;   4 3     i n t n = s i z e o f ( a r r ) / s i z e o f ( a r r [ 0 ] ) ;   4 4     s o r t K ( a r r , n , k ) ;   4 5     4 6     c o u t < < \" F o l l o w i n g i s s o r t e d a r r a y n \" ;   4 7     p r i n t A r r a y ( a r r , n ) ;   4 8     4 9     r e t u r n 0 ;   5 0 }   O u t p u t : 19/04/2019 Sorting Algorithms https://paper.dr opbox.com/doc/print/hT9ddICK y7gP a4Zw39w7k?print=true 34 /34 1 F o l l o w i n g i s s o r t e d a r r a y 2 2 3 6 8 1 2 5 6 T h e M in H e a p b a s e d m e t h o d t a k e s O ( n L o g k ) t im e a n d u s e s O ( k ) a u x ilia r y s p a c e . W e c a n a ls o u s e a B a la n c e d B in a r y S e a r c h T r e e in s t e a d o f H e a p t o s t o r e K + 1 e le m e n t s . T h e in s e r t a n d d e le t e o p e r a t io n s o n B a la n c e d B S T a ls o t a k e O ( L o g k ) t im e . S o B a la n c e d B S T b a s e d m e t h o d w ill a ls o t a k e O ( n L o g k ) t im e , b u t t h e H e a p b a s s e d m e t h o d s e e m s t o b e m o r e e f f ic ie n t a s t h e m in im u m e le m e n t w ill a lw a y s b e a t r o o t . A ls o , H e a p d o e s n ’t n e e d e x t r a s p a c e f o r le f t a n d r ig h t p o in t e r s .","libVersion":"0.2.2","langs":""}